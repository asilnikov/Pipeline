node() {
	def I = 'asilnikov'
	checkout([$class: 'GitSCM', branches: [[name: '*/asilnikov']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/asilnikov/Pipeline.git']]])
	env.PATH=env.PATH+":/opt/gradle/bin"

stage('Preparation (Checking out)') { 
	git([url: 'https://github.com/MNT-Lab/mntlab-pipeline.git', branch: "${I}"])
	}

stage('Builing code') {
	sh "gradle build"  
	}
    
stage('Testing') {
parallel (
    'Cucumber Tests': { sh "gradle cucumber" },
    'Jacoco Tests': { sh "gradle jacocoTestReport" },
    'Unit Tests': { sh "gradle test" }
    )
	}

stage ('Triggering job and fetching artefact after finishing') {
build job: "MNTLAB-asilnikov-child1-build-job", parameters: [string(name: 'BRANCH_NAME', value: 'asilnikov')]
echo WORKSPACE

step(
    [$class: 'CopyArtifact',
    filter: "asilnikov_dsl_script.tar.gz",
    projectName: "MNTLAB-${I}-child1-build-job" ])
	}
stage('Packaging and Publishing results') {
            sh ("tar -xzf ${I}_dsl_script.tar.gz && cp build/libs/*.jar ./")
            archiveArtifacts artifacts: 'gradle-simple.jar, Jenkinsfile, jobs.groovy', onlyIfSuccessful: true
            echo ('Finished: Packaging and Publishing results')
    }

stage ('Asking for manual approval') {
   timeout(time:1, unit:'HOURS') {
	input message:'Please approve current deployment', ok: 'Yes'
	 }
	}

stage ('Deployment') {
	sh 'java -jar build/libs/gradle-simple.jar'
	echo ('Finished: Deployment')
	}

stage ('Sending status') {
	echo 'Status: SUCCESS!'
	}
}
